grammar LabeledExpr;

prog:   stat+ ;

stat:   expr NEWLINE                # printExpr
    |   ID '=' expr NEWLINE         # assign
    |   NEWLINE                     # blank
    ;

expr:   expr op=('*'|'/') expr      # MulDiv
    |   expr op=('+'|'-') expr      # AddSub
    |   expr '!'                     # Factorial
    |   func=ID '(' expr ')'        # Function
    |   INT                         # Int
    |   FLOAT                       # Float
    |   ID                          # Id
    |   '(' expr ')'                # Parens
    ;

INT : [0-9]+ ;
FLOAT : [0-9]+'.'[0-9]+ ;
ID  : [a-zA-Z]+ ;
NEWLINE: '\r'? '\n' ;
WS  : [ \t]+ -> skip ;
